//
// Generated by Bluespec Compiler, version 2023.01 (build 52adafa5)
//
// On Tue May 23 04:04:44 UTC 2023
//
//
// Ports:
// Name                         I/O  size props
// s_axis_tready                  O     1 reg
// m_axis_tvalid                  O     1 reg
// m_axis_tdata                   O  2048 reg
// m_axis_tkeep                   O   256 reg
// m_axis_tlast                   O     1 reg
// m_axis_tuser                   O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// s_axis_tvalid                  I     1
// s_axis_tdata                   I  2048 reg
// s_axis_tkeep                   I   256 reg
// s_axis_tlast                   I     1 reg
// s_axis_tuser                   I     1 reg
// m_axis_tready                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAxiStreamFifo256(CLK,
			  RST_N,

			  s_axis_tvalid,
			  s_axis_tdata,
			  s_axis_tkeep,
			  s_axis_tlast,
			  s_axis_tuser,

			  s_axis_tready,

			  m_axis_tvalid,

			  m_axis_tdata,

			  m_axis_tkeep,

			  m_axis_tlast,

			  m_axis_tuser,

			  m_axis_tready);
  input  CLK;
  input  RST_N;

  // action method fifoIn_tValid
  input  s_axis_tvalid;
  input  [2047 : 0] s_axis_tdata;
  input  [255 : 0] s_axis_tkeep;
  input  s_axis_tlast;
  input  s_axis_tuser;

  // value method fifoIn_tReady
  output s_axis_tready;

  // value method fifoOut_tValid
  output m_axis_tvalid;

  // value method fifoOut_tData
  output [2047 : 0] m_axis_tdata;

  // value method fifoOut_tKeep
  output [255 : 0] m_axis_tkeep;

  // value method fifoOut_tLast
  output m_axis_tlast;

  // value method fifoOut_tUser
  output m_axis_tuser;

  // action method fifoOut_tReady
  input  m_axis_tready;

  // signals for module outputs
  wire [2047 : 0] m_axis_tdata;
  wire [255 : 0] m_axis_tkeep;
  wire m_axis_tlast, m_axis_tuser, m_axis_tvalid, s_axis_tready;

  // ports of submodule ifc_fifo
  wire [2305 : 0] ifc_fifo_D_IN, ifc_fifo_D_OUT;
  wire ifc_fifo_CLR,
       ifc_fifo_DEQ,
       ifc_fifo_EMPTY_N,
       ifc_fifo_ENQ,
       ifc_fifo_FULL_N;

  // ports of submodule ifc_fifoAxiStreamOut_buffer
  wire [2305 : 0] ifc_fifoAxiStreamOut_buffer_D_IN,
		  ifc_fifoAxiStreamOut_buffer_D_OUT;
  wire ifc_fifoAxiStreamOut_buffer_CLR,
       ifc_fifoAxiStreamOut_buffer_DEQ,
       ifc_fifoAxiStreamOut_buffer_EMPTY_N,
       ifc_fifoAxiStreamOut_buffer_ENQ,
       ifc_fifoAxiStreamOut_buffer_FULL_N;

  // ports of submodule ifc_slaveXactor_buffer
  wire [2305 : 0] ifc_slaveXactor_buffer_D_IN, ifc_slaveXactor_buffer_D_OUT;
  wire ifc_slaveXactor_buffer_CLR,
       ifc_slaveXactor_buffer_DEQ,
       ifc_slaveXactor_buffer_EMPTY_N,
       ifc_slaveXactor_buffer_ENQ,
       ifc_slaveXactor_buffer_FULL_N;

  // value method fifoIn_tReady
  assign s_axis_tready = ifc_slaveXactor_buffer_FULL_N ;

  // value method fifoOut_tValid
  assign m_axis_tvalid = ifc_fifoAxiStreamOut_buffer_EMPTY_N ;

  // value method fifoOut_tData
  assign m_axis_tdata = ifc_fifoAxiStreamOut_buffer_D_OUT[2305:258] ;

  // value method fifoOut_tKeep
  assign m_axis_tkeep = ifc_fifoAxiStreamOut_buffer_D_OUT[257:2] ;

  // value method fifoOut_tLast
  assign m_axis_tlast = ifc_fifoAxiStreamOut_buffer_D_OUT[1] ;

  // value method fifoOut_tUser
  assign m_axis_tuser = ifc_fifoAxiStreamOut_buffer_D_OUT[0] ;

  // submodule ifc_fifo
  SizedFIFO #(.p1width(32'd2306),
	      .p2depth(32'd16),
	      .p3cntr_width(32'd4),
	      .guarded(1'd1)) ifc_fifo(.RST(RST_N),
				       .CLK(CLK),
				       .D_IN(ifc_fifo_D_IN),
				       .ENQ(ifc_fifo_ENQ),
				       .DEQ(ifc_fifo_DEQ),
				       .CLR(ifc_fifo_CLR),
				       .D_OUT(ifc_fifo_D_OUT),
				       .FULL_N(ifc_fifo_FULL_N),
				       .EMPTY_N(ifc_fifo_EMPTY_N));

  // submodule ifc_fifoAxiStreamOut_buffer
  FIFO2 #(.width(32'd2306),
	  .guarded(1'd1)) ifc_fifoAxiStreamOut_buffer(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(ifc_fifoAxiStreamOut_buffer_D_IN),
						      .ENQ(ifc_fifoAxiStreamOut_buffer_ENQ),
						      .DEQ(ifc_fifoAxiStreamOut_buffer_DEQ),
						      .CLR(ifc_fifoAxiStreamOut_buffer_CLR),
						      .D_OUT(ifc_fifoAxiStreamOut_buffer_D_OUT),
						      .FULL_N(ifc_fifoAxiStreamOut_buffer_FULL_N),
						      .EMPTY_N(ifc_fifoAxiStreamOut_buffer_EMPTY_N));

  // submodule ifc_slaveXactor_buffer
  FIFO2 #(.width(32'd2306),
	  .guarded(1'd1)) ifc_slaveXactor_buffer(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(ifc_slaveXactor_buffer_D_IN),
						 .ENQ(ifc_slaveXactor_buffer_ENQ),
						 .DEQ(ifc_slaveXactor_buffer_DEQ),
						 .CLR(ifc_slaveXactor_buffer_CLR),
						 .D_OUT(ifc_slaveXactor_buffer_D_OUT),
						 .FULL_N(ifc_slaveXactor_buffer_FULL_N),
						 .EMPTY_N(ifc_slaveXactor_buffer_EMPTY_N));

  // submodule ifc_fifo
  assign ifc_fifo_D_IN = ifc_slaveXactor_buffer_D_OUT ;
  assign ifc_fifo_ENQ = ifc_fifo_FULL_N && ifc_slaveXactor_buffer_EMPTY_N ;
  assign ifc_fifo_DEQ =
	     ifc_fifoAxiStreamOut_buffer_FULL_N && ifc_fifo_EMPTY_N ;
  assign ifc_fifo_CLR = 1'b0 ;

  // submodule ifc_fifoAxiStreamOut_buffer
  assign ifc_fifoAxiStreamOut_buffer_D_IN = ifc_fifo_D_OUT ;
  assign ifc_fifoAxiStreamOut_buffer_ENQ =
	     ifc_fifoAxiStreamOut_buffer_FULL_N && ifc_fifo_EMPTY_N ;
  assign ifc_fifoAxiStreamOut_buffer_DEQ =
	     m_axis_tready && ifc_fifoAxiStreamOut_buffer_EMPTY_N ;
  assign ifc_fifoAxiStreamOut_buffer_CLR = 1'b0 ;

  // submodule ifc_slaveXactor_buffer
  assign ifc_slaveXactor_buffer_D_IN =
	     { s_axis_tdata, s_axis_tkeep, s_axis_tlast, s_axis_tuser } ;
  assign ifc_slaveXactor_buffer_ENQ =
	     s_axis_tvalid && ifc_slaveXactor_buffer_FULL_N ;
  assign ifc_slaveXactor_buffer_DEQ =
	     ifc_fifo_FULL_N && ifc_slaveXactor_buffer_EMPTY_N ;
  assign ifc_slaveXactor_buffer_CLR = 1'b0 ;

  initial begin
    $dumpfile("wave.lxt");
    $dumpvars;
  end

endmodule  // mkAxiStreamFifo256
